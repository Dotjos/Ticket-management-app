<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Ticket Management - Ticketrax</title>

  <!-- Tailwind CSS -->
  <script src="https://cdn.tailwindcss.com"></script>

  <!-- Toastify -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

  <style>
      @import url('https://fonts.googleapis.com/css2?family=Inconsolata:wght@200..900&display=swap');

      body{
        font-family: "Inconsolata", sans-serif;
      }
  </style>  


 
</head>

<body class="bg-gray-50">
  <div class="max-w-[1440px] mx-auto p-6 mt-20">
    <h1 class="text-3xl font-bold text-blue-900 mb-8">Ticket Management</h1>

    <!-- Ticket Form -->
    <form id="ticketForm" class="bg-white shadow-md rounded-lg p-6 space-y-4">
      <div>
        <label class="block text-gray-700 font-medium">Title *</label>
        <input id="title" type="text" class="w-full border rounded-lg p-2 mt-1 focus:ring-2 focus:ring-blue-500" />
      </div>

      <div>
        <label class="block text-gray-700 font-medium">Description</label>
        <textarea
          id="description"
          class="w-full border rounded-lg p-2 mt-1 focus:ring-2 focus:ring-blue-500"
        ></textarea>
      </div>

      <div>
        <label class="block text-gray-700 font-medium">Status *</label>
        <select
          id="status"
          class="w-full border rounded-lg p-2 mt-1 focus:ring-2 focus:ring-blue-500"
        >
          <option value="open">Open</option>
          <option value="in_progress">In Progress</option>
          <option value="closed">Closed</option>
        </select>
      </div>

      <!-- ðŸŸ© Button that toggles text dynamically -->
      <button
        type="submit"
        id="submitBtn"
        class="bg-blue-800 text-white px-5 py-2 rounded-lg hover:bg-blue-700 transition"
      >
        Create Ticket
      </button>
    </form>

    <!-- Ticket List -->
    <div id="ticketList" class="mt-10 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6"></div>
  </div>

  <script>
     const SESSION_KEY = "ticketapp_session";
  const session = localStorage.getItem(SESSION_KEY);

  if (!session || session !== "mock_token") {
    // User is not logged in, redirect to login
    window.location.href = "?page=login";
  }
    const STORAGE_KEY = "ticketapp_tickets";
    let editingId = null;

    function getTickets() {
      const data = localStorage.getItem(STORAGE_KEY);
      return data ? JSON.parse(data) : [];
    }

    function saveTickets(tickets) {
      localStorage.setItem(STORAGE_KEY, JSON.stringify(tickets));
    }

    function showToast(message, color = "#2563eb") {
      Toastify({
        text: message,
        duration: 2000,
        gravity: "top",
        position: "center",
        backgroundColor: color,
      }).showToast();
    }

    function renderTickets() {
      const tickets = getTickets();
      const list = document.getElementById("ticketList");
      list.innerHTML = "";

      if (tickets.length === 0) {
        list.innerHTML = `<p class="text-gray-500">No tickets yet. Create one above!</p>`;
        return;
      }

      tickets.forEach((ticket) => {
        const div = document.createElement("div");
        div.className = `p-6 rounded-lg shadow-md border-l-4 bg-white ${
          ticket.status === "open"
            ? "border-green-500"
            : ticket.status === "in_progress"
            ? "border-amber-500"
            : "border-gray-400"
        }`;

        div.innerHTML = `
          <h3 class="font-semibold text-lg">${ticket.title}</h3>
          <p class="text-gray-600 text-sm mt-1">${ticket.description || ""}</p>
          <span class="inline-block mt-3 text-xs font-medium px-3 py-1 rounded-full ${
            ticket.status === "open"
              ? "bg-green-100 text-green-700"
              : ticket.status === "in_progress"
              ? "bg-amber-100 text-amber-700"
              : "bg-gray-200 text-gray-700"
          }">${ticket.status.replace("_", " ").toUpperCase()}</span>
          <div class="flex justify-end gap-3 mt-4">
            <button class="text-blue-600 hover:underline" onclick="editTicket('${ticket.id}')">Edit</button>
            <button class="text-red-600 hover:underline" onclick="deleteTicket('${ticket.id}')">Delete</button>
          </div>
        `;
        list.appendChild(div);
      });
    }

    document.getElementById("ticketForm").addEventListener("submit", (e) => {
      e.preventDefault();

      const title = document.getElementById("title").value.trim();
      const description = document.getElementById("description").value.trim();
      const status = document.getElementById("status").value;
      const submitBtn = document.getElementById("submitBtn");

      if (!title) return showToast("Title is required", "#ef4444");

      const tickets = getTickets();

      if (editingId) {
        // ðŸŸ¢ Update existing ticket
        const updated = tickets.map((t) =>
          t.id === editingId
            ? { ...t, title, description, status, updatedAt: new Date().toISOString() }
            : t
        );
        saveTickets(updated);
        editingId = null;
        submitBtn.textContent = "Create Ticket";
        submitBtn.classList.replace("bg-green-700", "bg-blue-800");
        showToast("Ticket updated successfully!", "#16a34a");
      } else {
        // ðŸŸ¦ Create new ticket
        const newTicket = {
          id: crypto.randomUUID(),
          title,
          description,
          status,
          createdAt: new Date().toISOString(),
        };
        tickets.push(newTicket);
        saveTickets(tickets);
        showToast("Ticket created successfully!", "#2563eb");
      }

      document.getElementById("ticketForm").reset();
      renderTickets();
    });

    function editTicket(id) {
      const tickets = getTickets();
      const t = tickets.find((t) => t.id === id);
      if (!t) return;

      document.getElementById("title").value = t.title;
      document.getElementById("description").value = t.description || "";
      document.getElementById("status").value = t.status;
      editingId = id;

      // ðŸŸ© Update button text & style
      const submitBtn = document.getElementById("submitBtn");
      submitBtn.textContent = "Update Ticket";
    }

    function deleteTicket(id) {
      if (!confirm("Are you sure you want to delete this ticket?")) return;
      const tickets = getTickets().filter((t) => t.id !== id);
      saveTickets(tickets);
      renderTickets();
      showToast("Ticket deleted successfully!", "#ef4444");
    }

    renderTickets();
  </script>
</body>
</html>
